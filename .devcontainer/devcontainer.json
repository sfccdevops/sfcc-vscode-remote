{
    // Name of VS Code Remote Container
    "name": "SFCC",

    // Docker User on Container ( leave as "node" )
    "remoteUser": "node",

    // Docker Build Settings
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            // Node.js version (use -bullseye variants on local arm64/Apple Silicon):
            // 16, 14, 12, 16-bullseye, 14-bullseye, 12-bullseye, 16-buster, 14-buster, 12-buster
            "VARIANT": "16-bullseye"
        }
    },

    // Argument to pass to Docker Build's Run Command
    "runArgs": [
        // Need Environmental Variables? Make `.devcontainer/devcontainer.env` and uncomment the next line
        // "--env-file", ".devcontainer/devcontainer.env",

        // Name of Docker Container
        "--name", "sfcc-remote"
    ],

    // Handle Port Forwarding for VS Code Container to Local Machine Ports
    "portsAttributes": {
        // Add support for Prophet Debugger
        "60606": {
            "label": "Prophet Debugger Remote",
            "onAutoForward": "silent"
        }
    },

    // Virtual Mounted Volumes to make Containers perform better
    "mounts": [
        // Add Support for Bash History
        "source=sfcc-remote-bashhistory,target=/commandhistory,type=volume",

        // Mount a Copy of Git Config to Container to Inherit Local Global Settings
        "source=${localEnv:HOME}${localEnv:USERPROFILE}/.gitconfig,target=/home/node/.gitconfig,type=bind,consistency=cached",
    ],

    // VS Code Container Settings
    "settings": {
        // Window Settings
        "window.title": "SFCC${separator}Remote${separator}${activeEditorShort}",

        // Editor Settings
        "editor.fontLigatures": true,
        "editor.insertSpaces": true,
        "editor.lightbulb.enabled": false,
        "editor.quickSuggestionsDelay": 150,
        "editor.snippetSuggestions": "top",
        "editor.tabSize": 4,
        "editor.trimAutoWhitespace": true,

        // DIFF Editor Settings
        "diffEditor.ignoreTrimWhitespace": true,

        // Terminal Settings
        "terminal.integrated.enableBell": true,

        // File System Settings
        "files.eol": "\n",
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true, // This is needed to prevent line ending warnings on GitHub
        "files.exclude": {
            "**/.DS_Store": true,
            "**/.git": true,
            "**/.hg": true,
            "**/.svn": true,
            "**/*.git": true,
            "**/CVS": true,
            "**/Thumbs.db": true
        },

        // Files to Exclude from Search results
        "search.exclude": {
            "**/node_modules": true,
            "**/package-lock.json": true,
            "cartridge/static/*/css": true,
            "cartridge/static/*/js": true,
            "node_modules": true,
        },

        // Disable Recommended Extension Prompts
        "extensions.ignoreRecommendations": true,

        // Prophet Debugger Extension Settings
        "extension.prophet.clean.on.start": false,
        "extension.prophet.htmlhint.enabled": true,
        "extension.prophet.ignore.list": ["node_modules", "\\.git", "\\.zip$"],
        "extension.prophet.script.server.disable.diagnostics": false,
        "extension.prophet.upload.enabled": true,

        // Live Share Extension Settings
        "liveshare.alwaysFollowHost": true,
        "liveshare.anonymousGuestApproval": "reject",
        "liveshare.audio.startCallOnShare": true,
        "liveshare.diagnosticLogging": true,
        "liveshare.diagnosticLoggingLevel": "Debug",
        "liveshare.diagnosticMode": true,
        "liveshare.guestApprovalRequired": true,
        "liveshare.launcherClient": "visualStudioCode",
        "liveshare.presence": true,
        "liveshare.publishWorkspaceInfo": true,
        "liveshare.shareExternalFiles": false,

        // Add DevOps Scripts to Script Runner in Status Bar copied from `.devcontainer/docker-assets/scripts` to /usr/local/lib/sfcc-remote/
        "script-runner.statusBar": true,
        "script-runner.definitions": {
            "commands": [
                {
                    "identifier": "clean-install",
                    "description": "Clean Install - Purge All `node_modules` & Run Installer",
                    "command": "/usr/local/lib/sfcc-remote/clean-install",
                    "working_directory": "/workspaces/sfcc-vscode-remote"
                },
                {
                    "identifier": "git-revert",
                    "description": "Git Reset - Revert to a Previous Commit ...",
                    "command": "/usr/local/lib/sfcc-remote/git-revert $discard $hash $count",
                    "working_directory": "/workspaces/sfcc-vscode-remote",
                    "form": [
                        {
                            "variable": "$hash",
                            "question": "Revert to SHA Hash:",
                            "default": "HEAD"
                        },
                        {
                            "variable": "$discard",
                            "question": "What would you like to do with your changes?",
                            "options": [
                              "keep",
                              "remove",
                              "unstage"
                            ]
                        },
                        {
                          "variable": "$count",
                          "question": "Number of Commits to Rollback ( if HEAD ):",
                          "default": "0",
                          "options": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                          ]
                        }
                      ]
                }
            ]
        },

        // Spell Checker Words to Ignore
        "cSpell.words": [
            "abumalick",
            "azuretools",
            "bashhistory",
            "codezombiech",
            "commandhistory",
            "DavidAnson",
            "devcontainer",
            "eamodio",
            "easterapps",
            "fabiowquixada",
            "finico",
            "FiraCode",
            "formulahendry",
            "htmlhint",
            "kohler",
            "liveshare",
            "Menlo",
            "mhutchie",
            "mikestead",
            "mkdir",
            "monospace",
            "nikhilkumar80",
            "pikamachu",
            "pinentry",
            "publickey",
            "rafamel",
            "socat",
            "socat",
            "Tyriar",
            "unstage",
            "wayou",
            "wmaurer"
        ]
    },

    // VS Code Extensions to Install on Container Build
    "extensions": [
        // SFCC Productivity Pack Extensions
        "DotJoshJohnson.xml",                       // XML Tools
        "eamodio.gitlens",                          // GitLens â€” Git supercharged
        "fabiowquixada.vscode-isml-linter",         // ISML Linter
        "pikamachu.require-cartridge-resolve",      // Require cartridge resolve
        "SqrTT.prophet",                            // Prophet Debugger
        "wayou.vscode-todo-highlight",              // TODO Highlight

        // Microsoft Live Share Extensions
        "MS-vsliveshare.vsliveshare-audio",         // Live Share Audio
        "MS-vsliveshare.vsliveshare",               // Live Share

        // Helpful Development Team Extensions
        "aaron-bond.better-comments",               // Better Comments
        "abumalick.vscode-nvm",                     // vscode nvm integration
        "christian-kohler.npm-intellisense",        // npm Intellisense
        "christian-kohler.path-intellisense",       // Path Intellisense
        "codezombiech.gitignore",                   // gitignore
        "DavidAnson.vscode-markdownlint",           // markdownlint
        "easterapps.script-runner",                 // Script Runner
        "EditorConfig.EditorConfig",                // EditorConfig for VS Code
        "eg2.vscode-npm-script",                    // npm ( from Microsoft )
        "finico.quickOpenSelection",                // Quick Open Selection
        "formulahendry.auto-rename-tag",            // Auto Rename Tag
        "HookyQR.JSDocTagComplete",                 // Complete JSDoc Tags
        "mhutchie.git-graph",                       // Git Graph
        "mikestead.dotenv",                         // DotENV
        "nikhilkumar80.js-patterns-snippets",       // JavaScript Patterns Snippets
        "rafamel.subtle-brackets",                  // Subtle Match Brackets
        "streetsidesoftware.code-spell-checker",    // Code Spell Checker
        "Tyriar.sort-lines",                        // Sort lines
        "wmaurer.change-case"                      // Change Case
    ]
}
